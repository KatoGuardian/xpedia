{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\src\\App.svelte",
    "..\\..\\src\\Illustration.svelte",
    "..\\..\\src\\Item.svelte",
    "..\\..\\src\\CraftWeapon.svelte",
    "..\\..\\src\\Facility.svelte",
    "..\\..\\src\\BaseServices.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import { tick, afterUpdate } from \"svelte\";\r\n  import { rul } from \"./Ruleset\";\r\n  import { Link, Intro, LinksPage, Value, LinksList } from \"./Components\";\r\n  import Article from \"./Article.svelte\";\r\n\r\n  export let source;\r\n\r\n  let article = null;\r\n  let found = null;\r\n  let query = \"\";\r\n  let currentSection = null;\r\n  let activeOption;\r\n  let ignoreNextAutoscroll = false;\r\n  let id = \"\";\r\n  let searchDelayHandle = null;\r\n\r\n  async function loadRules() {\r\n    await rul.load(source);\r\n  }\r\n\r\n  let rulesLoaded = loadRules();\r\n\r\n  function goTo(id) {\r\n    window.location.hash = \"#\" + id;\r\n  }\r\n\r\n  function checkHash() {\r\n    let hash = document.location.hash.replace(\"%20\", \" \");\r\n    if (hash) {\r\n      let dd = hash.indexOf(\"::\");\r\n      if (dd != -1) {\r\n        id = hash.substr(1, dd - 1);\r\n        query = hash.substr(dd + 2);\r\n      } else {\r\n        id = hash.substr(1);\r\n      }\r\n\r\n      if (id == \"SEARCH\") {\r\n        if (query.length >= 2)\r\n          found = rul.search.findArticles(query).map(a => a.id);\r\n        else found = 0;\r\n        article = null;\r\n      } else {\r\n        found = null;\r\n        if (!article || article.id != id) article = rul.article(id);\r\n      }\r\n\r\n      console.log(id);\r\n      console.log(article);\r\n    }\r\n\r\n    if (article) {\r\n      if (article.section && currentSection != article.section)\r\n        currentSection = article.section;\r\n    } else {\r\n      currentSection = null;\r\n    }\r\n  }\r\n\r\n  function nextArticle(delta) {\r\n    let nextArticle = rul.findNextArticle(article, delta);\r\n    if (nextArticle) {\r\n      goTo(nextArticle.id);\r\n    }\r\n  }\r\n\r\n  document.addEventListener(\"keydown\", event => {\r\n    const keyName = event.key;\r\n    if (keyName == \"ArrowRight\") nextArticle(1);\r\n    if (keyName == \"ArrowLeft\") nextArticle(-1);\r\n  });\r\n\r\n  function searchKeyUp(e) {\r\n    if (searchDelayHandle) clearTimeout(searchDelayHandle);\r\n\r\n    searchDelayHandle = setTimeout(\r\n      () => {\r\n        goTo(\"SEARCH::\" + e.target.value);\r\n        searchDelayHandle = null;\r\n      },\r\n      e.key == \"Enter\" ? 10 : 1000\r\n    );\r\n  }\r\n\r\n  function selectSection(id) {\r\n    currentSection = rul.sections[id];\r\n  }\r\n\r\n  window.onhashchange = checkHash;\r\n\r\n  rulesLoaded.then(checkHash);\r\n\r\n  afterUpdate(() => {\r\n    if (activeOption) {\r\n      tick().then(() =>\r\n        activeOption.scrollIntoView({ behavior: \"auto\", block: \"center\" })\r\n      );\r\n    }\r\n  });\r\n\r\n  $: {\r\n    console.info(article || \"no article\");\r\n  }\r\n\r\n  let sortArticles = false;\r\n\r\n  $: sortedArticles = (articles) => sortArticles?articles.slice().sort((a,b) => a.title > b.title?1:-1):articles;\r\n  \r\n</script>\r\n\r\n<style>\r\n  .sidebar {\r\n    height: 95%;\r\n    position: fixed;\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n    background:#141d3d;\r\n  }\r\n  .narrow {\r\n    max-width: 800px;\r\n  }\r\n  /* .menu-list a:visited {\r\n    color: white;\r\n  } */\r\n  .active-article-option {\r\n    background: white;\r\n    color: black;\r\n  }\r\n\r\n  .centered {\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 100px;\r\n    height: 100px;\r\n    margin-top: -50px; /* Half the height */\r\n    margin-left: -50px; /* Half the width */\r\n  }\r\n</style>\r\n\r\n<svelte:head>\r\n  {#if !article}\r\n    <title>XPedia</title>\r\n  {/if}\r\n</svelte:head>\r\n\r\n{#await rulesLoaded}\r\n  <img class=\"centered\" alt=\"Loading rules...\" src=\"xpedia/spinner.svg\" />\r\n{:then}\r\n  <!-- desctop nav -->\r\n  <nav\r\n    class=\"navbar is-fixed-top is-hidden-touch\"\r\n    role=\"navigation\"\r\n    aria-label=\"main navigation\"> \r\n\r\n    <div class=\"navbar-brand \">\r\n      <div class=\"navbar-item has-dropdown is-hoverable \">\r\n        <a href=\"#MAIN\" class=\"navbar-link\">\r\n          <img src=\"xpedia/favicon.png\" alt=\"favicon\" />\r\n          {rul.modName} XPedia\r\n        </a>\r\n        <div class=\"navbar-dropdown\">\r\n          <div style=\"display:flex\">\r\n            <div>\r\n              {#each rul.sectionsOrder as section}\r\n                <a class=\"navbar-item\" href={'#' + section.id}>\r\n                  {section.title}\r\n                </a>\r\n              {/each}\r\n            </div>\r\n            <div>\r\n              {#each rul.typeSectionsOrder as section}\r\n                <a class=\"navbar-item\" href={'#' + section.id}>\r\n                  {section.title}\r\n                </a>\r\n              {/each}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"navbar-item\">\r\n        <a\r\n          style=\"color:white\"\r\n          href={'#' + (currentSection ? currentSection.id : 'MAIN')}>\r\n          {currentSection ? currentSection.title : ''}\r\n        </a>\r\n      </div>\r\n      {#if article && !['TYPE', 'PEDIA'].includes(article.type_id)}\r\n        <div class=\"navbar-item\">\r\n          <a\r\n            style=\"color:white\"\r\n            href={'#' + article.id}\r\n            on:click={e => window.scrollTo(0, 0)}>\r\n            {article.title}\r\n          </a>\r\n        </div>\r\n      {/if}\r\n\r\n    </div>\r\n\r\n    <div class=\"navbar-end\">\r\n      <div class=\"navbar-item is-paddingless\"> \r\n        <div class=\"dropdown\">\r\n          <button class=\"dropbtn navbar-link\">{rul.str(\"Language\")}</button>\r\n          <div class=\"dropdown-content\">\r\n            <a href=\"index.html\">English</a>\r\n            <a href=\"xpedia_ru.html\">Русский</a>\r\n            <a href=\"xpedia_pl.html\">Polski</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"navbar-item\">\r\n        <div class=\"field has-addons\">\r\n          <p class=\"control\">\r\n            <input\r\n              class=\"input\"\r\n              type=\"text\"\r\n              bind:value={query}\r\n              on:keyup={searchKeyUp}\r\n              placeholder=\"{rul.str(\"Search...\")}\" />\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  \r\n  <!-- small nav -->\r\n  <nav \r\n    class=\"navbar is-fixed-top is-hidden-desktop\" \r\n    role=\"navigation\" \r\n    aria-label=\"main navigation\"\r\n    style=\"border-left-width: 0px; border-right-width: 0px;\"> \r\n    <div class=\"dropdown is-inline-block\">\r\n      <button class=\"dropbtn navbar-link\">\r\n        {rul.modName}\r\n      </button>\r\n      <div class=\"dropdown-content\" style=\"height: 300px; overflow-y: scroll;\">\r\n        <div>\r\n          <a href=\"#MAIN\">{rul.str(\"HOME\")}</a>\r\n          {#each rul.sectionsOrder as section}\r\n            <a href={'#' + section.id}>\r\n              {section.title}\r\n            </a>\r\n          {/each}\r\n        </div>\r\n        <hr class=\"dropdown-divider\">\r\n        <div>\r\n          {#each rul.typeSectionsOrder as section}\r\n            <a href={'#' + section.id}>\r\n              {section.title}\r\n            </a>\r\n          {/each}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Cellphone -->\r\n    <div class=\"is-pulled-right is-hidden-tablet is-inline-block\">\r\n      <div class=\"dropdown is-inline-block\">\r\n        <button class=\"dropbtn navbar-link\">\r\n          {rul.str(\"Lang\")}\r\n        </button>\r\n        <div class=\"dropdown-content\">\r\n          <a href=\"index.html\">Eng</a>\r\n          <a href=\"xpedia_ru.html\">Рус</a>\r\n          <a href=\"xpedia_pl.html\">Pol</a>\r\n        </div>\r\n      </div>\r\n      <div class=\"navbar-item  is-inline-block\"\r\n        style=\"width: 100px; padding-left: 0px; padding-right: 8px;\">\r\n        <div class=\"field has-addons\">\r\n          <p class=\"control\">\r\n            <input\r\n              class=\"input\"\r\n              type=\"text\"\r\n              bind:value={query}\r\n              on:keyup={searchKeyUp}\r\n              placeholder=\"{rul.str(\"Search...\")}\" />\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Tablet -->\r\n    <div class=\"is-pulled-right is-hidden-mobile is-inline-block\">\r\n      <div class=\"dropdown is-inline-block\">\r\n        <button class=\"dropbtn navbar-link\">\r\n          {rul.str(\"Language\")}\r\n        </button>\r\n        <div class=\"dropdown-content\">\r\n          <a href=\"index.html\">English</a>\r\n          <a href=\"xpedia_ru.html\">Русский</a>\r\n          <a href=\"xpedia_pl.html\">Polski</a>\r\n        </div>\r\n      </div>\r\n      <div class=\"navbar-item  is-inline-block\">\r\n        <div class=\"field has-addons\">\r\n          <p class=\"control\">\r\n            <input\r\n              class=\"input\"\r\n              type=\"text\"\r\n              bind:value={query}\r\n              on:keyup={searchKeyUp}\r\n              placeholder=\"{rul.str(\"Search...\")}\" />\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n\r\n  <div class=\"columns is-fullheight is-marginless\">\r\n    \r\n    <div\r\n      class=\"column is-2 is-sidebar-menu is-hidden-touch sidebar\">\r\n\r\n      {#each article && article.section && article.section.isType() ? rul.typeSectionsOrder : rul.sectionsOrder as section}\r\n        {#if !currentSection || section.id == currentSection.id}\r\n          <p class=\"menu-label\">{section.title}</p>\r\n          <ul class=\"menu-list\">\r\n            {#each sortedArticles(section.articles) as option}\r\n              <li>\r\n                {#if article && article.id == option.id}\r\n                  <a\r\n                    href={'#' + option.id}\r\n                    class=\"active-article-option\"\r\n                    bind:this={activeOption}>\r\n                    {option.title}\r\n                  </a>\r\n                {:else}\r\n                  <a\r\n                    href={'#' + option.id}\r\n                    on:click={() => (ignoreNextAutoscroll = true)}>\r\n                    {option.title}\r\n                  </a>\r\n                {/if}\r\n              </li>\r\n            {/each}\r\n          </ul>\r\n        {/if}\r\n      {/each}\r\n    </div>\r\n    <div class=\"column is-2 is-hidden-touch\" />\r\n    <div class=\"side-sort-button\">\r\n      <button class=\"is-hidden-touch\" style={sortArticles?\"\":\"text-decoration:line-through\"} on:click={e => sortArticles = !sortArticles}>A-Z</button>\r\n    </div>\r\n\r\n    <div class=\"column is-main-content main\" style=\"padding-top: 0px;\">\r\n\r\n      {#if article}\r\n        <Article {article} {query} />\r\n      {:else if query}\r\n        Searching \"\r\n        <em>{query}</em>\r\n        \":\r\n        <br />\r\n        {#if found && found.length > 0}\r\n          <LinksPage links={found} />\r\n        {:else if query.length < 2}\r\n          <i>Query too short</i>\r\n        {:else if searchDelayHandle}\r\n          ...\r\n        {:else}\r\n          <i>Nothing found</i>\r\n        {/if}\r\n      {:else if !query}\r\n        <Intro />\r\n      {/if}\r\n    </div>\r\n  </div>\r\n\r\n{/await}\r\n",
    "<script>\r\n  import { rul } from \"./Ruleset\";\r\n\r\n  export let id;\r\n  export let left = false;\r\n  export let maxWidth = 640\r\n  export let maxZoom = 4\r\n  export let style = \"\"\r\n\r\n  function loaded(img) {\r\n    console.info(img)\r\n    let zoom = Math.min(maxZoom, Math.max(1, Math.floor(maxWidth / img.naturalWidth)))\r\n    img.width = img.naturalWidth * zoom;\r\n    img.height = img.naturalHeight * zoom;\r\n  }\r\n\r\n  console.log(id);\r\n\r\n</script>\r\n\r\n<style>\r\n  .pedia-image {\r\n    image-rendering: pixelated;\r\n    image-rendering: crisp-edges;\r\n    float: right;\r\n    padding: 5px;\r\n  }\r\n</style>\r\n\r\n{#if id && rul.sprite(id)}\r\n  <div>\r\n    <img\r\n      class=\"pedia-image\"\r\n      style={style + (left?\"float:left\":\"\")}\r\n      on:load={e => loaded(e.target)}\r\n      alt={id || ''}\r\n      src={rul.sprite(id)} />\r\n  </div>\r\n{/if}",
    "<script>\r\n  import { rul } from \"./Ruleset\";\r\n  import Illustration from \"./Illustration.svelte\";\r\n  import SpecialBonus from \"./SpecialBonus.svelte\"\r\n  import Link from \"./Link.svelte\";\r\n  import CanvasImage from \"./CanvasImage.svelte\"\r\n  import BaseServiceList from \"./BaseServiceList.svelte\"\r\n  import Value from \"./Value.svelte\";  \r\n\r\n  export let item;\r\n  export let title = \"Item\"\r\n  let attacks\r\n\r\n  function soundsFrom(sounds){\r\n    if(!sounds)\r\n      return []\r\n    if(!sounds.length)\r\n      sounds = [sounds]\r\n    return sounds.map(s => rul.path + rul.sounds[s]).filter(s => s)\r\n  }\r\n\r\n  $:{ \r\n      attacks = item.attacks().slice()\r\n      if(item.compatibleAmmo)\r\n        for(let ammoId of item.compatibleAmmo){\r\n          let ammo = rul.items[ammoId]\r\n          let ammoAttack = ammo.attacks()[0]\r\n          ammoAttack.item = ammo\r\n          attacks.push(ammoAttack)\r\n        }\r\n\r\n      console.info(attacks)\r\n    }\r\n\r\n  console.info(item)\r\n</script>\r\n\r\n<style>\r\n  td{\r\n    padding:0px 2px;\r\n  }\r\n  .sprite{\r\n    image-rendering: pixelated;\r\n    image-rendering: crisp-edges;\r\n  }\r\n  .right-column{\r\n    vertical-align: top;\r\n  }\r\n  .alter td{\r\n    border: none;\r\n    font-size: small;\r\n  }\r\n  img {\r\n    max-width: 100%;\r\n  }  \r\n  .ammo-img{\r\n    text-align: center; \r\n    vertical-align: middle;\r\n    padding: 0px 2px 0px 0px;\r\n  }\r\n</style>\r\n\r\n  <tr> <td colspan=\"2\" class=\"table-header\">{title}</td> </tr>\r\n  {#if (item.sprite && item.sprite != \"Resources/Blanks/Blank.png\") ||attacks.length > 0}\r\n    <tr> <td colspan=\"2\">\r\n      <div style=\"display: flex; align-items: flex-start; margin: 5px 3px;\">\r\n      <CanvasImage src={rul.sprite(item.sprite)} maxWidth={32*item.invWidth} maxHeight={32*item.invHeight} zoom=\"2\"/>\r\n      {#if attacks.length > 0}\r\n        <table class=\"attacks-table\">\r\n          <thead>\r\n            {#if item.battleType != 2}\r\n              <td>mode</td>\r\n              <td>accuracy</td>\r\n              <td>cost</td>\r\n            {/if}\r\n            <td>damage</td>\r\n          </thead>\r\n          {#each attacks as attack}\r\n            <tr>\r\n              {#if attack.mode == \"ammo\"}\r\n                {#if item.battleType != 2}\r\n                  <td rowspan=\"2\" class=\"ammo-img\">\r\n                    <CanvasImage src={rul.sprite(attack.item.sprite)} maxWidth={32*attack.item.invWidth} maxHeight={32*attack.item.invHeight} zoom=\"2\"/>\r\n                    <!--<img class=\"sprite\" use:ammoSprite style=\"position:relative;\" alt=\"X\" src={rul.sprite(attack.item.sprite)}/>-->                    \r\n                  </td> \r\n                  <td colspan=\"2\">\r\n                    <Link href={attack.item.type}/><br/><small>Clip: {attack.item.clipSize} Wgt: {attack.item.weight}</small>\r\n                  </td>\r\n                {/if}          \r\n              {:else}\r\n                <td rowspan=\"2\">{attack.name}{attack.shots==1?\"\":\"×\" + attack.shots}</td> \r\n                <td><nobr><em>{attack.accuracy}</em><small>%<br/><SpecialBonus bonus={attack.accuracyMultiplier}/></small></nobr></td>\r\n                <td>\r\n                <em>{attack.cost.time + (attack.flatTime?\"\":\"%\")}</em> <small>TU</small>                \r\n                {#each Object.keys(attack.cost) as res}\r\n                  {#if res != 'time' && attack.cost[res] != 0}<br/><Value val={attack.cost[res]}/>&nbsp;<small>{res}</small>{/if}\r\n                {/each}                \r\n                </td>\r\n              {/if}          \r\n              <td>{#if 'damage' in attack || 'damageType' in attack}\r\n                <nobr>{attack.pellets>1 && attack.damageBonus?\"(\":\"\"}<em>{attack.damage || 0}</em>\r\n                <small>\r\n                  <SpecialBonus plus={true} bonus={attack.damageBonus}/>{attack.pellets>1 && attack.damageBonus?\")\":\"\"}\r\n                </small>\r\n                {attack.pellets>1?\" ×\" + attack.pellets:\"\"}\r\n                </nobr>\r\n                <br/><Link href={rul.damageTypes[attack.damageType]}/>\r\n              {/if}\r\n              </td>\r\n              </tr>\r\n              <tr>\r\n              <td colspan=\"3\" style=\"columns: 2;\">\r\n                <small>\r\n                {#if attack.alter}            \r\n                  {#each Object.keys(attack.alter).sort() as field, i}\r\n                    {field}:&nbsp;<Value val={attack.alter[field]}/><br/>\r\n                  {/each}\r\n                {/if}\r\n                </small>\r\n              </td>\r\n            </tr>      \r\n          {/each}\r\n        </table>\r\n      {/if}  \r\n      </div>\r\n    </td></tr>\r\n    \r\n  {/if}\r\n\r\n\r\n  {#each Object.entries(item).sort((a,b) => a[0]>b[0]?1:-1) as [key, prop]}\r\n    {#if !['sprite', 'type', '_attacks', 'damageAlter'].includes(key)}\r\n      <tr>\r\n        <td>{@html rul.decamelize(key)}</td>\r\n        <td class=\"right-column\">\r\n        {#if ['requiresBuyBaseFunc' ].includes(key)}\r\n            <BaseServiceList items={prop} vertical={true}/>\r\n        {:else if ['manufacture', 'componentOf'].includes(key)}\r\n          <table class=\"number-table\">\r\n          {#each Object.keys(prop) as field, i}\r\n            <tr><td><em>{prop[field]}</em></td><td><Link href={field}/></td></tr>\r\n          {/each}\r\n          </table>\r\n        {:else if ['damageBonus', 'meleeBonus', 'accuracyMultiplier', 'meleeMultiplier', 'closeQuartersMultiplier'].includes(key)}\r\n          <SpecialBonus bonus={prop}/>\r\n        {:else if ['damageType', 'meleeType'].includes(key)}\r\n          {rul.damageTypeName(prop)}\r\n        {:else if key == 'battleType'}\r\n          {prop}: {rul.battleTypes[prop]}\r\n        {:else if key.includes(\"Sound\")}\r\n          {#each soundsFrom(prop) as sound, i}\r\n            {@html i>0?\"<br/>\":\"\"}\r\n            <audio controls src={sound}>Audio tag not working</audio>\r\n          {/each}\r\n        {:else if ['floorSprite', 'handSprite'].includes(key)}\r\n          <a style=\"vertical-align:top\" href={rul.specialSprite(key, prop)}>{prop}</a> \r\n          <img class=\"sprite\" alt={prop} src={rul.specialSprite(key, prop)}/>\r\n        {:else}        \r\n          <Value val={prop}/>\r\n        {/if}\r\n        </td>\r\n      </tr>\r\n    {/if}\r\n  {/each}\r\n",
    "<script>\r\n  import { rul } from \"./Ruleset\";\r\n  import { Link, Intro, LinksPage, Value } from \"./Components\";  \r\n  import Item from \"./Item.svelte\"\r\n\r\n  export let weapon;\r\n\r\n  $: {\r\n    console.log(weapon);\r\n  }\r\n</script>\r\n\r\n<style>\r\n.panels3 td{\r\n  padding-right:10px;\r\n  vertical-align: top;\r\n}\r\n</style>\r\n\r\n<table class=\"panels3\">\r\n  <tr>\r\n    <td>\r\n      <table class=\"main-table\">\r\n        <tr>\r\n          <td colspan=\"2\" class=\"table-header\">{rul.str(\"Weapon\")}</td>\r\n        </tr>\r\n        {#each Object.entries(weapon).sort((a, b) =>\r\n          a[0] > b[0] ? 1 : -1\r\n        ) as prop}\r\n          {#if !['type'].includes(prop[0])}\r\n            <tr>\r\n              <td class=\"padding-right\">\r\n                {@html rul.decamelize(prop[0])}\r\n              </td>\r\n              <td>\r\n                <Value val={prop[1]} />\r\n              </td>\r\n            </tr>\r\n          {/if}\r\n        {/each}\r\n      </table>\r\n    </td>\r\n    <td>\r\n    <table class=\"main-table\">\r\n    {#if weapon.launcher}\r\n      <Item item={rul.items[weapon.launcher]} title={\"Launcher: \" + rul.str(weapon.launcher)}/>\r\n    {/if}\r\n    {#if weapon.clip}\r\n      <Item item={rul.items[weapon.clip]} title={\"Clip: \" + rul.str(weapon.clip)}/>\r\n    {/if}\r\n    </table>\r\n    </td>\r\n  </tr>\r\n</table>\r\n",
    "<script>\r\n  import { rul } from \"./Ruleset\";\r\n  import BaseServiceList from \"./BaseServiceList.svelte\";\r\n  import SpecialBonus from \"./SpecialBonus.svelte\";\r\n\r\n  import { Link, Intro, LinksPage, Value, LinksList } from \"./Components\";\r\n\r\n  export let facility;\r\n  let size = 1;\r\n\r\n  $: {\r\n    size = facility.size || 1;\r\n    console.log(size);\r\n    console.info(facility);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .dropdown-content {\r\n    background: black;\r\n    padding: 5px;\r\n  }\r\n</style>\r\n\r\n<table class=\"main-table\">\r\n  <tr>\r\n    <td colspan=\"2\" class=\"table-header\">Craft</td>\r\n  </tr>\r\n  {#each Object.entries(facility).sort((a, b) =>\r\n    a[0] > b[0] && a[0] != 'storageTiles' ? 1 : -1\r\n  ) as [key, prop]}\r\n    {#if !['type', 'battlescapeTerrainData', 'craftInventoryTile', 'deployment'].includes(key)}\r\n      <tr>\r\n        <td class=\"padding-right\">\r\n          {@html rul.decamelize(key)}\r\n        </td>\r\n        <td>\r\n          {#if ['buildCostItems'].includes(key)}\r\n            {#each Object.keys(prop).sort() as field, i}\r\n              {#if i != 0}\r\n                <br />\r\n              {/if}\r\n              <Link href={field} />\r\n              : {prop[field].build} / {prop[field].refund}\r\n            {/each}\r\n          {:else if ['storageTiles'].includes(key)}\r\n            <div class=\"dropdown is-hoverable\">\r\n              <div class=\"dropdown-trigger\">\r\n                <button\r\n                  class=\"button\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-controls=\"dropdown-tiles\">\r\n                  Expand\r\n                </button>\r\n              </div>\r\n              <div class=\"dropdown-menu\" id=\"dropdown-tiles\" role=\"menu\">\r\n                <div class=\"dropdown-content\" style=\"columns:6\">\r\n                  <LinksList items={prop} vertical={true} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          {:else if ['provideBaseFunc', 'requiresBaseFunc', 'forbiddenBaseFunc'].includes(key)}\r\n            <BaseServiceList items={prop} vertical={true} />\r\n          {:else if ['spriteFacility', 'spriteShape'].includes(key)}\r\n            <div class=\"tight\" style=\"columns:{size};width:{32 * size}px;\">\r\n              {#each { length: size } as _, y}\r\n                {#each { length: size } as _, x}\r\n                  <img\r\n                      class=\"sprite\"\r\n                      alt=\"X\"\r\n                      src={rul.specialSprite('baseSprite', prop * 1 + x * size + y)} />\r\n                {/each}\r\n              {/each}\r\n            </div>\r\n          {:else}\r\n            <Value val={prop} />\r\n          {/if}\r\n        </td>\r\n      </tr>\r\n    {/if}\r\n  {/each}\r\n</table>\r\n",
    "<script>\r\n  import { rul } from \"./Ruleset\";\r\n  import { Link, Intro, LinksPage, Value, LinksList } from \"./Components\";\r\n\r\n  export let query = null\r\n\r\n  console.log(query);\r\n</script>\r\n\r\n<style>\r\n.highlight td{\r\n  background: #685C74;\r\n}\r\na{\r\n  color:cyan;\r\n}\r\n</style>\r\n\r\n<table class=\"main-table\">\r\n\r\n  {#each Object.entries(rul.baseServices) as service}\r\n    <tr class={service[0] == query?\"highlight\":\"\"}>\r\n      <td><a color=cyan href={'#' + service[0]}>{@html rul.str(service[0])}</a></td>\r\n      <td>\r\n        <LinksList items={service[1].providedBy} />\r\n      </td>\r\n    </tr>\r\n  {/each}\r\n\r\n</table>\r\n"
  ],
  "names": [],
  "mappings": "AAgHE,QAAQ,eAAC,CAAC,AACR,MAAM,CAAE,GAAG,CACX,QAAQ,CAAE,KAAK,CACf,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,MAAM,CAClB,WAAW,OAAO,AACpB,CAAC,AAOD,sBAAsB,eAAC,CAAC,AACtB,UAAU,CAAE,KAAK,CACjB,KAAK,CAAE,KAAK,AACd,CAAC,AAED,SAAS,eAAC,CAAC,AACT,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,GAAG,CACT,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,UAAU,CAAE,KAAK,CACjB,WAAW,CAAE,KAAK,AACpB,CAAC;ACrHD,YAAY,cAAC,CAAC,AACZ,eAAe,CAAE,SAAS,CAC1B,eAAe,CAAE,WAAW,CAC5B,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,GAAG,AACd,CAAC;ACYD,gBAAE,CAAC,AACD,QAAQ,GAAG,CAAC,GAAG,AACjB,CAAC,AACD,qBAAO,CAAC,AACN,eAAe,CAAE,SAAS,CAC1B,eAAe,CAAE,WAAW,AAC9B,CAAC,AACD,2BAAa,CAAC,AACZ,cAAc,CAAE,GAAG,AACrB,CAAC,AAKD,GAAG,cAAC,CAAC,AACH,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,uBAAS,CAAC,AACR,UAAU,CAAE,MAAM,CAClB,cAAc,CAAE,MAAM,CACtB,OAAO,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,AAC1B,CAAC;AC9CH,sBAAQ,CAAC,gBAAE,CAAC,AACV,cAAc,IAAI,CAClB,cAAc,CAAE,GAAG,AACrB,CAAC;ACEC,iBAAiB,cAAC,CAAC,AACjB,UAAU,CAAE,KAAK,CACjB,OAAO,CAAE,GAAG,AACd,CAAC;ACXH,wBAAU,CAAC,gBAAE,CAAC,AACZ,UAAU,CAAE,OAAO,AACrB,CAAC,AACD,eAAC,CAAC,AACA,MAAM,IAAI,AACZ,CAAC"
}